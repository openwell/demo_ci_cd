version: 2
jobs:
  node:
    working_directory: ~/demo-react-native
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      - run: npm install

      - save_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}
          paths:
            - ~/.cache/npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            npm run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/demo-react-native
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android-alpha:
    working_directory: ~/demo-react-native/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/demo-react-native

      - attach_workspace:
          at: ~/demo-react-native

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          name: Create api_key_playstore.json
          command: base64 -d <<< $API_KEY_PLAYSTORE > api_key_playstore.json

      - run:
          name: Create release.keystore
          command: base64 -d <<< $RELEASE_KEYSTORE_BASE64 > $releaseKeyStore

      - run:
          name: Create keystore.properties
          command: printf 'android.useAndroidX=%s\nandroid.enableJetifier=%s\nFLIPPER_VERSION=%d\nMYAPP_UPLOAD_STORE_FILE=%s\nMYAPP_UPLOAD_KEY_ALIAS=%s\nMYAPP_UPLOAD_STORE_PASSWORD=%s\nMYAPP_UPLOAD_KEY_PASSWORD=%s' $android_useAndroidX $android_enableJetifier $FLIPPER_VERSION $releaseKeyStore $MYAPP_UPLOAD_KEY_ALIAS $MYAPP_UPLOAD_STORE_PASSWORD $MYAPP_UPLOAD_KEY_PASSWORD > keystore.properties
  
      
      - run: gem update --system

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane android alpha
          command: |
            bundle exec fastlane alpha

      - store_artifacts:
          path: app/build/outputs/apk/release/app-release.apk

  android-beta:
    working_directory: ~/demo-react-native/android
    docker:
      - image: circleci/android:api-28-node8-alpha
    steps:
      - checkout:
          path: ~/demo-react-native

      - attach_workspace:
          at: ~/demo-react-native

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run:
          name: Create api_key_playstore.json
          command: base64 -d <<< $API_KEY_PLAYSTORE > api_key_playstore.json

      - run:
          name: Create release.keystore
          command: base64 -d <<< $RELEASE_KEYSTORE_BASE64 > $releaseKeyStore

      - run:
          name: Create keystore.properties
          command: printf 'android.useAndroidX=%s\nandroid.enableJetifier=%s\nFLIPPER_VERSION=%d\nMYAPP_UPLOAD_STORE_FILE=%s\nMYAPP_UPLOAD_KEY_ALIAS=%s\nMYAPP_UPLOAD_STORE_PASSWORD=%s\nMYAPP_UPLOAD_KEY_PASSWORD=%s' $android_useAndroidX $android_enableJetifier $FLIPPER_VERSION $releaseKeyStore $MYAPP_UPLOAD_KEY_ALIAS $MYAPP_UPLOAD_STORE_PASSWORD $MYAPP_UPLOAD_KEY_PASSWORD > keystore.properties
  

      - run: gem update --system

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          name: fastlane android beta
          command: |
            bundle exec fastlane beta

workflows:
  version: 2
  node-android:
    jobs:
      - android-hold:
          type: approval
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - node:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - android-alpha:
          requires:
            - node
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - android-beta:
          requires:
            - android-hold
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/